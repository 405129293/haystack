[metadata]
name = farm-haystack
version = file: VERSION.txt
url = https://github.com/deepset-ai/haystack
project_urls =
    Docs: RTD = https://haystack.deepset.ai/overview/intro
    CI: GitHub = https://github.com/deepset-ai/haystack/actions
    GitHub: issues = https://github.com/deepset-ai/haystack/issues
    GitHub: repo = https://github.com/deepset-ai/haystack
description = Neural Question Answering & Semantic Search at Scale. Use modern transformer based models like BERT to find answers in large document collections
long_description = file: README.md
long_description_content_type = text/markdown
keywords=
    QA 
    Question-Answering 
    Reader 
    Retriever 
    semantic-search 
    search 
    BERT 
    roberta 
    albert 
    squad 
    mrc 
    transfer-learning 
    language-model 
    transformer
author = deepset.ai
author_email = malte.pietsch@deepset.ai
license = Apache License 2.0
license_file = LICENSE
platforms = any
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Science/Research
    License :: Freely Distributable
    License :: OSI Approved :: Apache Software License
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10

[options]
use_scm_version = True
python_requires = >=3.7, <4
packages = find:
setup_requires =
    setuptools
    wheel
install_requires =
    importlib-metadata; python_version < '3.8'
    torch >1.9, <1.11
    requests >=2.27, <3
    pydantic >=1.9, <2
    transformers ==4.13.0
    nltk >=3.6, <4
    pandas >=1.3, <2

    # Utils
    dill >=0.3, <1 # pickle extension for (de-)serialization
    tqdm >=4.62, <5 # progress bars in model download and training scripts
    networkx >=2.6, <3 # graphs library
    mmh3 >=3.0, <4 # fast hashing function (murmurhash3)
    quantulum3 >=0.7, <1 # quantities extraction from text
    azure-ai-formrecognizer ==3.2.0b2  # forms reader

    # Preprocessing
    more_itertools >=8.12, <9 # for windowing
    python-docx >= 0.8, <1
    langdetect >=1.0, <2  # for PDF conversions
    tika >=1.24, <2 # Apache Tika (text & metadata extractor)

    # See haystack/nodes/retriever/_embedding_encoder.py, _SentenceTransformersEmbeddingEncoder
    sentence-transformers >=0.4.0, <1

    # for stats in run_classifier
    scipy >=1.6, <2
    scikit-learn >=1.0.0, <2

    # Metrics and logging
    seqeval >= 1.2, <2
    mlflow <=1.13.1

    # Elasticsearch
    elasticsearch >=7.7, <=7.10
    elastic-apm >=6.7, <7

    # Not found in repo, to review:
    #uvloop==0.14; sys_platform != 'win32' and sys_platform != 'cygwin'


[options.packages.find]
exclude =
    rest_api*
    test*
    tutorials*
    ui*


[options.extras_require]
sql = 
    sqlalchemy >=1.4.2, <2
    sqlalchemy_utils >=0.38, <2
    psycopg2-binary >=2.9, <3; sys_platform != 'win32' and sys_platform != 'cygwin'
only-faiss = 
    faiss-cpu >=1.6.3, <2
faiss = 
    farm-haystack[sql,only-faiss]
only-faiss-gpu = 
    faiss-gpu >=1.6.3, <2
faiss-gpu = 
    farm-haystack[sql,only-faiss-gpu]
only-milvus1 = 
    pymilvus >=1.0.0, <2.0.0  # Refer milvus version support matrix at https://github.com/milvus-io/pymilvus#install-pymilvus
milvus1 = 
    farm-haystack[sql,only-milvus1]
only-milvus = 
    pymilvus >=2.0.0, <3  # Refer milvus version support matrix at https://github.com/milvus-io/pymilvus#install-pymilvus
milvus = 
    farm-haystack[sql,only-milvus]
weaviate =
    weaviate-client ==2.5.0
graphdb = 
    SPARQLWrapper >=1.8, <2
docstores =
    farm-haystack[faiss,milvus1,weaviate,graphdb]
docstores-gpu =
    farm-haystack[faiss-gpu,milvus1,weaviate,graphdb]
crawler = 
    selenium >=4, <5
    webdriver-manager >=3.5, <4
preprocessing = 
    beautifulsoup4 >=4, <5
    markdown >=3.3, <4
ocr = 
    pytesseract ==0.3.7
    pillow >=9, <10
    pdf2image ==1.14.0
onnx = 
    onnxruntime >=1.10, <1.11
    onnxruntime_tools >=1.7, <1.8
onnx-gpu = 
    onnxruntime-gpu >=1.10, <1.11
    onnxruntime_tools >=1.7, <1.8
ray = 
    ray >=1.9.1, <2
colab = 
    grpcio ==1.43.0
    torch ==1.10.2
rest =
    fastapi
    uvicorn
    gunicorn
    python-multipart  # optional FastAPI dependency for form data
ui = 
    streamlit >=1.2.0, <2
    st-annotated-text >=2.0.0, <3
    markdown >=3.3.4, <4
dev = 
    mypy
    pytest
    responses
    tox
    python-multipart
    psutil
    pylint
    black
test = 
    farm-haystack[docstores,crawler,preprocessing,ocr,ray,dev]
all =
    farm-haystack[docstores,crawler,preprocessing,ocr,ray,dev,onnx]
all-gpu =
    farm-haystack[docstores-gpu,crawler,preprocessing,ocr,ray,dev,onnx-gpu]


[tool:pytest]
testpaths = 
    test
    rest_api/test
    ui/test
python_files =
    test_*.py
addopts =
    -vv


[mypy]
warn_return_any = false
warn_unused_configs = true
ignore_missing_imports = true
plugins = pydantic.mypy


[tox]
requires = tox-venv
           setuptools >= 30.0.0
envlist = py36,py37
