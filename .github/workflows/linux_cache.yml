name: Python Cache (Linux)

on:
  # Make this workflow behave like an action, so it's callable by other workflows
  workflow_call:
    inputs:
      python_version:
        type: string
        required: true

jobs:

  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    steps:
      - run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python_version }}

      - name: Cache
        id: cache-python-env
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          # The cache will be rebuild every day and at every change of the dependency files
          key: linux-${{ env.date }}-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/setup.cfg') }}-${{ hashFiles('**/pyproject.toml') }}

      - name: Install dependencies
        if: steps.cache-python-env.outputs.cache-hit != 'true'
        run: |
          pip install --upgrade pip
          pip install .[test]
          pip install rest_api/
          pip install ui/
          pip install torch-scatter -f https://data.pyg.org/whl/torch-1.10.0+cpu.html
